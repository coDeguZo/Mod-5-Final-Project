{"version":3,"sources":["components/Nav.js","components/Login.js","components/Signup.js","components/Bookmarks.js","containers/ProfileContainer.js","containers/Home.js","components/HomeNews.js","components/About.js","containers/NbaContainer.js","components/NbaPlayer.js","components/NbaPlayerIndex.js","components/NbaTeam.js","components/NbaTeamsIndex.js","components/NbaTeamPagePlayer.js","components/NbaTeamPage.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","to","user","localStorage","length","onClick","swal","icon","text","logout","Login","state","email","password","onChangeEmail","event","setState","target","value","onChangePassword","handleLoginSubmit","preventDefault","obj","fetch","method","headers","body","JSON","stringify","then","Resp","json","data","setItem","token","loginUser","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","color","Form","size","key","onSubmit","this","Segment","stacked","Input","label","placeholder","name","onChange","required","type","Button","Message","React","Component","Signup","image","onChangeState","id","handleSubmit","resp","as","Field","control","Bookmarks","mark","urlToImage","author","description","title","url","published_at","date","Date","parse","newDate","slice","Row","columns","alt","src","window","open","unBookmark","Icon","Profile","modalEditOpen","modalDeleteOpen","bookmarks","changeProfileInfoState","handleEditOpen","handleEditClose","handleDeleteOpen","handleDeleteClose","newProfileInfo","edit","modalOpen","deleteBookmark","article","find","filtered","filter","bookmark","divided","stretched","position","zIndex","Card","centered","fluid","raised","wrapped","ui","Content","Meta","extra","Modal","trigger","onClose","Description","defaultValue","class","Actions","deleteProfile","fontFamily","favsPlayers","Image","map","user_player","floated","player","player_image","full_name","jersey_number","team","league","basic","delete","parseInt","favTeams","user_team","venue","market","deleteTeam","Home","news","topHeadlines","articles","About","NbaContainer","playerNews","process","Math","max","logo_img","Carousel","interval","Item","Caption","players","teams","scope","NbaPlayer","handleOpen","handleClose","college","weight","birthdate","favoritePlayer","NbaPlayerIndex","dropdownTeam","searchPlayers","filteredPlayers","search","onChangeTeams","textContent","onChangeSearch","includes","unshift","relaxed","Dropdown","selection","options","Search","onSearchChange","playerTwo","favs","NbaTeam","console","log","sport_title","favoriteTeam","NbaTeams","filteredTeam","NbaTeamPagePlayer","NbaTeamPage","teamNews","filteredNews","loaded","nbaNews","backgroundColor","width","header","headline","background","Loader","active","indeterminate","App","Nbateams","nbaLeague","leagues","currentUser","favoritePlayers","favoriteTeams","alreadyFollowed","displayed","bookmarked","changeUserState","handleLogin","userInfo","user_id","handleLogout","clear","findUserPlayer","foundPlayer","userPlayer","handleDeleteFavorite","favoriteNbaPlayer","some","p","player_id","favoriteNbaTeam","team_id","handleDeleteFavoriteTeam","display","prop","filteredPlayer","nba","getItem","exact","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b07cd41b.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n// import {Image} from 'semantic-ui-react'\nimport swal from 'sweetalert';\n\nconst Nav = (props) => {\n    return (\n        <div> \n            <div className=\"topnav\">\n                <Link to=\"/\">ⓈⓅⓃ</Link>\n                <Link to=\"/nba\">NBA</Link>\n                <div className=\"dropdown-teams\">\n                    <Link to=\"/nba/teams\" className=\"team-dropdown\">Teams <i className=\"fa fa-caret-down\"></i></Link>\n                    {/* <div class=\"dropdown-content\">\n                        {props.teams.map(team => {\n                            return <Link to={\"/nba/teams/\" + team.name}><Image size=\"mini\" src={team.image}/>{team.name}</Link>\n                        })}\n                    </div> */}\n                </div>\n                <Link to=\"/nba/players\">Players</Link>\n                {props.user === null || localStorage.length === 0 ? null : <Link to=\"/\" onClick={() => {\n                    return swal({\n                        icon: \"info\",\n                        text: \"Sports Highlights Coming Soon!\"\n                    })\n                }}>Sports Media</Link>}\n                <div className=\"topnav-right\">\n                    <Link to=\"\" onClick={() => {\n                        return swal({\n                            icon: \"info\",\n                            text: \"About Page Coming Soon!\"\n                        })\n                    }}>About</Link>\n                    {props.user === null || localStorage.length === 0 ? <Link to=\"/signup\">Signup</Link> : null}\n                    {props.user === null || localStorage.length === 0 ? <Link to=\"/login\">Login</Link> : <Link to=\"/profile\">Profile</Link>}          \n                    {props.user === null || localStorage.length === 0 ? null : <Link to=\"/login\" onClick={props.logout}>Logout</Link>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Nav","import React from 'react'\nimport {Grid, Header, Form, Segment, Button, Message} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nimport swal from 'sweetalert';\n\nclass Login extends React.Component{\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    onChangeEmail = (event) => {\n        this.setState({ email: event.target.value })\n    }\n\n    onChangePassword = (event) => {\n        this.setState({ password: event.target.value })\n    }\n\n    handleLoginSubmit = (event) => {\n        event.preventDefault()\n        const obj = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        fetch(\"https://spn-backend.herokuapp.com/login\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\n            body: JSON.stringify(obj)\n        })\n        .then(Resp => Resp.json())\n        .then(data => {\n            if(!data.user){\n                swal({\n                    icon: \"warning\",\n                    text: \"Incorrect Username or Password\"\n                })\n            } else {\n                swal({\n                    icon: \"success\",\n                    text: \"Signed In\"\n                })\n                localStorage.setItem(\"token\", data.token)\n                this.props.loginUser(data.user)\n            }\n        })\n        \n    }\n\n    render(){\n        return(\n            <div className=\"login-background\">\n                <Grid textAlign='center' style={{ height: '100vh'}} verticalAlign='middle' className=\"user-login\">\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header color='olive' textAlign='center'>\n                    <h1 className=\"signup-font\">ⓈⓅⓃ</h1>\n                    {/* <h1>Welcome Back</h1> */}\n                    </Header>\n                <br/>\n                    <Form\n                    size=\"mini\"\n                    key=\"mini\"\n                    onSubmit={this.handleLoginSubmit}\n                    >\n                    <Segment stacked>\n                        <Form.Input\n                        label=\"email\"\n                        placeholder=\"email\"\n                        name=\"email\"\n                        onChange={this.onChangeEmail}\n                        value={this.state.email}\n                        required\n                        />\n                        <Form.Input\n                        type=\"password\"\n                        label=\"password\"\n                        placeholder=\"password\"\n                        name=\"password\"\n                        onChange={this.onChangePassword}\n                        value={this.state.password}\n                        required\n                        />\n                        <Button type=\"submit\">Login</Button>\n                    </Segment>\n                    </Form>\n                    <p style={{color: \"white\"}}>Don't have an account?</p>\n                    <Message>\n                    <Link to=\"/signup\"> Sign up here</Link>\n                </Message>\n                </Grid.Column>\n            </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {Grid, Segment, Header, Form, Input, Button} from 'semantic-ui-react'\nimport swal from 'sweetalert';\n\n\nclass Signup extends React.Component{\n    state = {\n        name: \"\",\n        email: \"\",\n        image: \"\",\n        password: \"\"\n    }\n\n    onChangeState = (event) => {\n        this.setState({ [event.target.id]: event.target.value })\n    }\n\n    handleSubmit = () => {\n        const obj = {\n            name: this.state.name,\n            email: this.state.email,\n            image: this.state.image,\n            password: this.state.password\n        }\n        fetch(\"https://spn-backend.herokuapp.com/users\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\n            body: JSON.stringify(obj)\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            swal({\n                icon: \"success\",\n                text: \"Welcome To SPN! You Are Signed In\"\n            })\n            localStorage.setItem(\"token\", data.token)\n            this.props.loginUser(data.user)\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"user-signup\"> \n            <Grid textAlign='center' style={{ height: '100vh'}} verticalAlign='middle' >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as='h1' color='olive' textAlign='center'>\n                    <h1 className=\"signup-font\">ⓈⓅⓃ</h1>\n                    </Header>\n                    <Form \n                    onSubmit={this.handleSubmit}\n                    >\n                    <Segment stacked>\n                    <Form.Field\n                        control={Input}\n                        label='Full Name'\n                        placeholder='Full Name'\n                        id=\"name\"\n                        onChange={this.onChangeState}\n                        required\n                    />\n                    <Form.Field\n                        control={Input}\n                        label='Email'\n                        placeholder='Email'\n                        id=\"email\"\n                        onChange={this.onChangeState}\n                        required\n                    />\n                    <Form.Field\n                        control={Input}\n                        label='Image URL'\n                        placeholder='Image'\n                        id=\"image\"\n                        onChange={this.onChangeState}\n                        required\n                    />\n                    <Form.Field\n                        control={Input}\n                        type=\"password\"\n                        label='Password'\n                        placeholder='Password'\n                        id=\"password\"\n                        onChange={this.onChangeState}\n                        required\n                    />\n                    {/* <div class=\"ui checkbox\">\n                        <input type=\"checkbox\" class=\"hidden\" readonly=\"\" tabindex=\"0\" onClick={() => this.myFunction} />\n                        <label>Show Password</label>\n                    </div> */}\n                    <Button type=\"submit\" >Login</Button>\n\n                    {/* <Form.Field\n                    control={Checkbox}\n                    label='I agree to the Terms and Conditions'\n                    /> */}\n                    </Segment>\n                    </Form>\n                </Grid.Column>\n            </Grid>\n        </div>\n        )\n    }\n}\n\nexport default Signup","import React from 'react'\nimport {Grid, Button, Segment, Icon} from 'semantic-ui-react'\n// import swal from 'sweetalert';\n\nexport default class Bookmarks extends React.Component{\n    render(){\n        let {urlToImage, author, description, title, url, published_at} = this.props.mark\n        let date = Date.parse(published_at)\n        let newDate = Date(date).slice(0, 15)\n        return(\n            <div>\n                <Segment>\n                <Grid>\n                    <Grid.Row columns={2}>\n                        <Grid.Column >\n                            <img alt=\"profile-news\" className=\"profile-news-image\" src={urlToImage} ></img>\n                            {author !== null ? \n                            <p>By:{author}</p>\n                            :\n                            <p>By: Matt Lowry</p>\n                            }\n                        </Grid.Column>\n                        <Grid.Column>\n                            <br />\n                            <h3>{title}</h3>\n                            <p>{newDate}</p>\n                            <p>{description}</p>\n                            <div>\n                                <Button onClick={() => window.open(url)}>Read More</Button>\n                                <Button onClick={() => this.props.unBookmark(title)}><Icon name=\"bookmark\"/>Un-BookMark</Button>\n                            </div>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                </Segment>\n            </div>\n        )\n    }\n\n}","import React, {Component} from 'react'\nimport {Grid, Image, Icon, Button, Card, Segment, Modal, Header, Form} from 'semantic-ui-react'\n// import Card from 'react-bootstrap/Card'\nimport Bookmarks from '../components/Bookmarks'\nimport swal from 'sweetalert';\n\nclass Profile extends Component{\n    state = {\n        name: this.props.user.name,\n        email: this.props.user.email,\n        image: this.props.user.image,\n        password: \"\",\n        modalEditOpen: false,\n        modalDeleteOpen: false,\n        bookmarks: []\n    }\n\n    componentDidMount(){\n        fetch(\"https://spn-backend.herokuapp.com/user_bookmarks\")\n        .then(resp => resp.json())\n        .then(data => {\n          let filtered = data.filter(bookmark => bookmark.user.id === this.props.user.id)\n          this.setState({bookmarks: filtered})\n        })\n    }\n\n    changeProfileInfoState = (event) => {\n        this.setState({ [event.target.id]: event.target.value })\n    }\n\n    handleEditOpen = () => this.setState({ modalEditOpen: true })\n    handleEditClose = () => this.setState({ modalEditOpen: false })\n    handleDeleteOpen = () => this.setState({ modalDeleteOpen: true })\n    handleDeleteClose = () => this.setState({ modalDeleteOpen: false })\n\n    newProfileInfo = (event) => {\n        event.preventDefault()\n        const obj = {\n            name: this.state.name,\n            email: this.state.email,\n            image: this.state.image\n        }\n        // debugger\n        fetch(`https://spn-backend.herokuapp.com/users/${this.props.user.id}`, {\n            method: \"PATCH\",\n            headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\n            body: JSON.stringify(obj)\n        })\n        .then(resp => resp.json())\n        .then(data => {\n          // debugger\n          this.props.edit(data)})\n          this.setState({ modalOpen: false })\n          swal({\n            icon: \"success\",\n            text: \"Profile Updated!\"\n        })\n    }\n\n    deleteBookmark = (title) => {\n        if (this.props.user !== null){\n            swal({\n                icon: \"info\",\n                text: \"Article No Longer Bookmarked\"\n            })\n            const article = this.state.bookmarks.find(article => article.title === title)\n            fetch(`https://spn-backend.herokuapp.com/user_bookmarks/${article.id}`, {\n                method: \"DELETE\"\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                let filtered = this.state.bookmarks.filter(bookmark => bookmark.title !== title)\n                this.setState({ bookmarks: filtered })\n                swal({\n                    icon: \"info\",\n                    text: \"Article No Longer Bookmarked\"\n                })\n            })\n        } else {\n            swal({\n                icon: \"info\",\n                text: \"Must Be Signed In To Bookmark Article!\"\n            })\n        }\n    }\n\n\n    render(){\n        return(\n            <div className=\"profile profile-background\">\n                <Grid columns={3} divided>\n                    <Grid.Row stretched>\n                    <Grid.Column className=\"profile-user-card\">\n                            <Segment style={{position: \"fixed\", zIndex:10}}>\n                                <Card className=\"profile-edit-button\" centered=\"true\" fluid=\"true\" raised=\"false\">\n                                    <img alt=\"profile\" src={this.props.user.image} wrapped ui={false} className=\"profile-user-image\"/>\n                                    <Card.Content>\n                                    <Card.Header>{this.props.user.name}</Card.Header>\n                                    <Card.Meta>\n                                        <span className='date'>{this.props.user.email}</span>\n                                    </Card.Meta>\n                                    {/* <Card.Description>\n                                        {this.props.user.name} loves playing basketball and soccer.\n                                    </Card.Description> */}\n                                    </Card.Content>\n                                    <Card.Content extra>\n                                    </Card.Content>\n                                    {/* Edit Profile */}\n                                    <Modal \n                                    trigger={<button type=\"button\" className=\"btn btn-outline-success\" id=\"profile-button\" onClick={this.handleEditOpen} >Edit Profile</button>}\n                                    open={this.state.modalEditOpen}\n                                    onClose={this.handleEditClose}\n                                    centered={true}\n                                    >\n                                        <Modal.Content>\n                                        <Modal.Description>\n                                            <Header>Edit Profile Information</Header>\n                                            <Form\n                                            onSubmit={this.newProfileInfo}\n                                            >\n                                                <Form.Field>\n                                                <label>Full Name</label>\n                                                <input id=\"name\" defaultValue={this.state.name} placeholder='Full Name' onChange={this.changeProfileInfoState} required/>\n                                                </Form.Field>\n                                                <Form.Field>\n                                                <label>Email</label>\n                                                <input id=\"email\" defaultValue={this.state.email} placeholder='Email' onChange={this.changeProfileInfoState} required/>\n                                                </Form.Field>\n                                                <Form.Field>\n                                                <label>Image URL</label>\n                                                <input id=\"image\" defaultValue={this.state.image} placeholder='Profile Image' onChange={this.changeProfileInfoState} required/>\n                                                </Form.Field>\n                                                <Button className=\"profile-edit-button\" type='submit'>Submit</Button>\n                                            </Form>\n                                        </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    {/* Delete Profile */}\n                                    <Modal \n                                    trigger={<button type=\"button\" class=\"btn btn-outline-danger\" id=\"profile-button\" onClick={this.handleDeleteOpen} >Delete Profile</button>}\n                                    open={this.state.modalDeleteOpen}\n                                    onClose={this.handleDeleteClose}\n                                    centered={true}\n                                    >\n                                        <Modal.Header>Delete Profile</Modal.Header>\n                                        <Modal.Content>\n                                        <p>\n                                            Are you sure you want to delete your profile?  We'll be sad to see you go!\n                                        </p>\n                                        </Modal.Content>\n                                        <Modal.Actions>\n                                        <Button onClick={this.handleDeleteClose} color='red'>\n                                            <Icon name='remove' /> No\n                                        </Button>\n                                        <Button onClick={this.props.deleteProfile} color='green'>\n                                            <Icon name='checkmark' /> Yes\n                                        </Button>\n                                        </Modal.Actions>\n                                    </Modal>\n                                </Card>\n                            </Segment>\n                    </Grid.Column>\n                    {/* Second Column */}\n                    <Grid.Column> \n                    {/* <br /> */}\n                    <Segment>\n                    <h1 style={{fontFamily: \"Impact\"}}>Favorite Players</h1>\n                    {/* Favorite Players Ternary */}\n                    {this.props.favsPlayers.length === 0 ?\n                    <Card centered=\"true\">\n                    <Card.Content>\n                    <Image\n                        // floated='center'\n                        size='large'\n                        src=\"https://www.ctvnews.ca/polopoly_fs/1.4644391.1571407649!/httpImage/image.jpg_gen/derivatives/landscape_1020/image.jpg\"\n                    />\n                        <Card.Description>\n                            <h1 style={{fontFamily: \"Impact\"}}> No Favorite Players </h1>\n                        </Card.Description>\n                        </Card.Content>\n                        <Card.Content>\n                        </Card.Content>\n                    </Card>\n                    :\n                    <div>\n                    {this.props.favsPlayers.map(user_player => (\n                        <Card key={user_player.id} centered=\"true\">\n                            <Card.Content>\n                            <Image\n                                floated='right'\n                                size='small'\n                                src={user_player.player.player_image}\n                            />\n                            <Card.Header>{user_player.player.full_name}</Card.Header>\n                            <Card.Meta>{user_player.player.jersey_number}</Card.Meta>\n                            <Card.Meta>{user_player.player.team.name}</Card.Meta>\n                            <Card.Description>\n                                <p>Position: {user_player.player.position}</p>\n                                <p>League: {user_player.player.league}</p>\n                            </Card.Description>\n                            </Card.Content>\n                            <Card.Content>\n                            <div className='ui two buttons'>\n                                <Button basic color='red' onClick={() => this.props.delete(parseInt(user_player.id))}>\n                                Unfavorite\n                                </Button>\n                            </div>\n                            </Card.Content>\n                        </Card>\n                        ))}\n                    </div>\n                    }\n                    </Segment>\n                    </Grid.Column>\n                    <hr className=\"dividers hr-md-left-0\"/>\n                    {/* Column Three */}\n                    <Grid.Column>\n                        {/* <br /> */}\n                        <Segment>\n                        <h1 style={{fontFamily: \"Impact\"}}>Favorite Teams</h1>\n                        {/* Tenary for Favorite Players Or Not */}\n                        {this.props.favTeams.length === 0 ?\n                        <Card centered=\"true\">\n                        <Card.Content>\n                        <Image\n                            // floated='center'\n                            size='big'\n                            src=\"https://9b16f79ca967fd0708d1-2713572fef44aa49ec323e813b06d2d9.ssl.cf2.rackcdn.com/1140x_a10-7_cTC/20190108mfpinesports11-10-1548879899.jpg\"\n                        />\n                            <Card.Description>\n                                <h1 style={{fontFamily: \"Impact\"}}> No Favorite Teams </h1>\n                            </Card.Description>\n                            </Card.Content>\n                            <Card.Content>\n                            </Card.Content>\n                        </Card>\n                        :\n                        <div>\n                        {this.props.favTeams.map(user_team => (\n                        <Card key={user_team.id} centered=\"true\">\n                            <Card.Content>\n                            <Image\n                                // floated='center'\n                                size='small'\n                                src={user_team.team.image}\n                            />\n                            <Card.Header>{user_team.team.name}</Card.Header>\n                            <Card.Description>\n                                <p>Venue: {user_team.team.venue}</p>\n                                <p>League: {user_team.team.market}</p>\n                            </Card.Description>\n                            </Card.Content>\n                            <Card.Content>\n                            <div className='ui two buttons'>\n                                <Button basic color='red' onClick={() => this.props.deleteTeam(parseInt(user_team.id))}>\n                                Unfavorite\n                                </Button>\n                            </div>\n                            </Card.Content>\n                        </Card>\n                        ))}\n                        </div>\n                        }\n                     </Segment>\n                    </Grid.Column>\n                    </Grid.Row>\n                    {/* Bookmark Group */}\n                    <Grid.Row className=\"profile-row-bookmarks\">\n                        <div className=\"padding-bookmarks\">\n                            {this.state.bookmarks.length === 0 ?\n                            <Segment>\n                            <h1 style={{fontFamily: \"Impact\"}}> <u>Bookmarked Articles</u> </h1>\n                            <br />\n                            <Grid>\n                                <Grid.Row columns={2}>\n                                    <Grid.Column >\n                                        <img alt=\"profile-news\" className=\"profile-news-image\" src=\"https://s.hdnux.com/photos/76/01/54/16259844/3/rawImage.jpg\" ></img>\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <h1 style={{fontFamily: \"Impact\"}}> Empty Gym - No BookMarks</h1>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                            </Segment>\n                            :\n                            <div>\n                            {this.state.bookmarks.map(mark => {\n                                return(\n                                    <div>\n                                        <Bookmarks mark={mark} key={mark.id} unBookmark={this.deleteBookmark}/>\n                                    </div>\n                                ) \n                            })}\n                            </div>\n                            }\n                        </div>\n                    </Grid.Row>\n              </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Profile ","import React from 'react'\nimport {Grid, Image, Segment} from 'semantic-ui-react'\nimport Carousel from 'react-bootstrap/Carousel'\nimport HomeNews from '../components/HomeNews'\n\nclass Home extends React.Component{\n    state = {\n        news: [],\n        topHeadlines: []\n    }\n\n    componentDidMount(){\n        fetch(\"https://newsapi.org/v2/everything?domains=espn.com&pageSize=50&apiKey=f44ccf725ca9471596da059a5defc2fc\")\n        .then(resp => resp.json())\n        .then( data => {\n            this.setState({ news: data.articles })\n        })\n\n        fetch(\"https://newsapi.org/v2/top-headlines?sources=espn&pageSize=5&apiKey=f44ccf725ca9471596da059a5defc2fc\")\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({ topHeadlines: data.articles })\n        })\n    }\n\n\n    render(){\n        let news = this.state.topHeadlines.slice(0, 3)\n        // console.log(news)\n        let homeImage = \"home-image\"\n        return(\n            // className=\"my-carousel\"\n            <div className=\"home-page-color\">\n                <Segment>\n                    <h1 className=\"spn-daily-news\">ⓈⓅⓃ Daily News</h1>\n                    {/* <Image src={process.env.PUBLIC_URL + '/SPN.png'} centered className=\"spn-daily-news\"/> */}\n                </Segment>\n                <br />\n                 <Grid divided='vertically'>\n                    <Grid.Row columns={2}>\n                    <Grid.Column >\n                        \n                    <Carousel interval={6000} >\n                        {/* Second */}\n                        <Carousel.Item>\n                        {/* <Carousel.Caption>\n                                <h3>Second Slide Label</h3>\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption> */}\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Curry.jpg'}\n                            alt=\"Second slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Third */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src=\"https://static01.nyt.com/images/2014/11/23/sports/GIANTS-slide-PAJ0/GIANTS-slide-PAJ0-superJumbo.jpg\"\n                            alt=\"third slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Fourth */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Lebron-Shot.jpg'}\n                            alt=\"fourth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Fifth */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Lebron-Wade.jpg'}\n                            alt=\"fifth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Sixth */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Kyrie.jpeg'}\n                            alt=\"sixth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Seventh */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Derrick-Rose.jpg'}\n                            alt=\"seventh slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Eigth */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Lebron.jpg'}\n                            alt=\"eighth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Ninth */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Rings.jpg'}\n                            alt=\"ninth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Tenth */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/MJ-Winning.jpg'}\n                            alt=\"tenth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Eleven */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_1.jpg'}\n                            alt=\"tenth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Twelve */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_2.jpg'}\n                            alt=\"tenth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Thirteen */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_3.jpg'}\n                            alt=\"tenth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* FourTeen */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_4.jpeg'}\n                            alt=\"tenth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Fifteen */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_5.jpeg'}\n                            alt=\"tenth slide\"\n                            className={homeImage}\n                            />\n                        </Carousel.Item>\n                        {/* Sixteen */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_6.png'}\n                            alt=\"tenth slide\"\n                            className=\"home-image\"\n                            />\n                        </Carousel.Item>\n                        {/* Seventeen */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_7.jpg'}\n                            alt=\"tenth slide\"\n                            className=\"home-image\"\n                            />\n                        </Carousel.Item>\n                        {/* Eighteen */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/new_8.jpeg'}\n                            alt=\"tenth slide\"\n                            className=\"home-image\"\n                            />\n                        </Carousel.Item>\n                        {/* Nineteen */}\n                        <Carousel.Item>\n                            <img\n                            // className=\"d-block w-100\"\n                            src={process.env.PUBLIC_URL + '/Dream-Team.jpg'}\n                            alt=\"tenth slide\"\n                            className=\"home-image\"\n                            />\n                        </Carousel.Item>\n                    </Carousel>\n                    </Grid.Column>\n                    {/* <Image src=\"https://dypdvfcjkqkg2.cloudfront.net/large/2579549-3774.png\" size=\"large\"/> */}\n                    <Grid.Column>\n                    <Segment>\n                    <h4 className=\"top-story-headline-home\"> <strong>Top Stories</strong> </h4>\n                    <hr className=\"dividers hr-md-left-0\"/>\n                        <Grid>\n                            {news.map(article => \n                            article.urlToImage.split(\"\").slice(article.urlToImage.length - 3).join(\"\") !== \"png\" ? \n                            <Grid.Row key={article.content}>\n                                <Grid.Column>\n                                    <h4><strong>{article.title}</strong></h4>\n                                    <Image src={article.urlToImage} size=\"small\" className=\"daily-news-image\" onClick={() => window.open(article.url)}/>\n                                    <p>{article.description}</p>\n                                    <hr className=\"dividers hr-md-left-0\"/>\n                                </Grid.Column>\n                            </Grid.Row>\n                            :\n                            null\n                            )}\n                        </Grid>\n                    </Segment>\n                    </Grid.Column>\n                    </Grid.Row>\n                    {this.state.news.map(article => {\n                    return article.urlToImage !== null && article.content !== \"\" && article.urlToImage !== \"https://a1.espncdn.com/combiner/i?img=%2Fi%2Fespn%2Fespn_logos%2Fespn_red.png\" && article.urlToImage.split(\"\").slice(article.urlToImage.length - 3).join(\"\") !== \"png\" ?\n                    <Grid.Row key={article.content} columns={2}>\n                        <Grid.Column width={6}>\n                            <Image className=\"home-news-image\" src={article.urlToImage} />\n                            {article.author !== null ? \n                            <p>By: {article.author}</p>\n                            :\n                            <p>By: Matt Lowry</p>\n                            }\n                        </Grid.Column>\n                        <Grid.Column width={10}>\n                            <HomeNews article={article} key={article.title} user={this.props.user}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    :\n                    null\n                })}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from \"react\"\nimport {Button, Icon} from \"semantic-ui-react\"\nimport swal from 'sweetalert';\n\nclass HomeNews extends React.Component {\n    state = {\n        userBookmarks: [],\n        bookmarked: false,\n    }\n    \n    componentDidMount(){\n        fetch(\"https://spn-backend.herokuapp.com/user_bookmarks\")\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({ userBookmarks: data })\n            if (this.props.user !== null){\n                if (this.state.userBookmarks.find(article => (article.title === this.props.article.title && this.props.user.id === parseInt(article.user_id)))){\n                    this.setState({bookmarked: true})\n                 }\n            } \n            else {\n               this.setState({bookmarked: false})\n            }\n        })\n    }\n\n    createBookmark = () => {\n    \n    if (this.props.user !== null){\n        if (this.state.bookmarked === false) {\n        const obj = {\n            author: this.props.article.author,\n            content: this.props.article.content,\n            description: this.props.article.description,\n            published_at: this.props.article.publishedAt,\n            title: this.props.article.title,\n            url: this.props.article.url,\n            urlToImage: this.props.article.urlToImage,\n            user_id: this.props.user.id\n        }\n\n        fetch(\"http://spn-backend.herokuapp.com/user_bookmarks\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\n            body: JSON.stringify(obj)\n        })\n        .then(resp => resp.json())\n        .then(data => {\n        this.setState({ bookmarked: !this.state.bookmarked})\n        if (this.state.bookmarked === true){\n            swal({\n                icon: \"success\",\n                text: \"Bookmarked Article\"\n            })\n        } \n        })\n    } } else {\n        swal({\n            icon: \"info\",\n            text: \"Must Be Signed In To Bookmark Article!\"\n        })\n    }\n    }\n\n    deleteBookmark = (title) => {\n        if (this.props.user !== null){\n            swal({\n                icon: \"info\",\n                text: \"Head Over To Profile To UnBookmark!\"\n            })\n            // const id = this.state.userBookmarks.find(article => {\n            //     if (article.title === title) {\n            //         return article.id\n            // }})\n            //  console.log(id)\n            // fetch(`http://localhost:3000/user_bookmarks/${id}`, {\n            //     method: \"DELETE\"\n            // })\n            // .then(resp => resp.json())\n            // .then(data => {\n            //     this.setState({ bookmarked: !this.state.bookmarked})\n            //     swal({\n            //         icon: \"info\",\n            //         text: \"Article No Longer Bookmarked\"\n            //     })\n            // })\n        } else {\n            swal({\n                icon: \"info\",\n                text: \"Must Be Signed In To Bookmark Article!\"\n            })\n        }\n    }\n\n    render(){\n        const {title, description, url, publishedAt} = this.props.article\n        // let timeChange = publishedAt.toLocaleTimeString('en-US')\n        // debugger\n\n        let date = Date.parse(publishedAt)\n        let newDate = Date(date).slice(0, 15)\n        return(\n            <div>\n                    {this.state.bookmarked === false ?\n                    <Button floated=\"right\" onClick={this.createBookmark}><Icon name=\"bookmark outline\"/>Bookmark Article</Button>\n                    :\n                    <Button floated=\"right\" onClick={() => this.deleteBookmark(title)}><Icon name=\"bookmark\"/>Bookmark Article</Button>\n                    }\n                    <br />\n                    <br />\n                    <br />\n                    <h3><strong>{title}</strong></h3>\n                    <p>Published: {newDate}</p>\n                    <p className=\"home-news-paragraphs\">{description}</p>\n                    <Button onClick={() => window.open(url)}>Read More</Button>\n            </div>\n        )\n    }\n}\n\nexport default HomeNews","import React from 'react'\nimport {Grid} from 'semantic-ui-react'\n\nclass About extends React.Component{\n    render(){\n        return(\n            <div className=\"about-background\">\n                <br />\n                <br />\n                <br />\n                <Grid>\n                    <Grid.Row columns={3}>\n                        <Grid.Column textAlign=\"center\">\n                        <img alt=\"user\" src={process.env.PUBLIC_URL + '/IMG_2939.jpeg'} className=\"about-user-image\"></img>\n                        <br />\n                        <br />\n                        <p>Nduka-Eze Uzoma Ariguzo</p>\n                        <p>Flatiron School Mod 5 Project ⓈⓅⓃ</p>\n                        <p>Frameworks: React.js, Ruby on Rails, Semantic-UI-React</p>\n                        <p>-</p>\n                        {/* Need To Get To 4 More Tags */}\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"left\">\n                        <br />\n                        <br />\n                        <h1>Pupose of ⓈⓅⓃ</h1>\n                        <hr className=\"dividers hr-md-left-0\"/>\n                        <p4>SPN was created as a way for users to read their favorite Sports News</p4>\n                        {/* Need To Get To 4 More Tags */}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                \n            </div>\n        )\n    }\n}\n\nexport default About","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {Grid, Image, Segment, Button} from 'semantic-ui-react'\nimport Carousel from 'react-bootstrap/Carousel'\nclass NbaContainer extends React.Component {\n    state = {\n        news: [],\n        playerNews: []\n    }\n\n    componentDidMount(){\n        fetch(`https://newsapi.org/v2/everything?domains=nba.com&pageSize=20&apiKey=${process.env.REACT_APP_API_NEWS_NBA_KEY}`)\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({ news: data.articles })\n        })\n    }\n\n    render(){\n        // var item = this.state.news[Math.floor(Math.random() * this.state.news.length)];\n        let news = this.state.news.slice(Math.max(this.state.news.length - 3, 3))\n        // debugger\n        return(\n            <div className=\"nba-container\">\n                 <Segment>\n                    <h1 className=\"spn-nba-news\">NBA<img alt=\"nba\" src={this.props.league.logo_img} className=\"nba-image\"></img> News</h1>\n                    {/* <Image src={process.env.PUBLIC_URL + '/SPN.png'} centered className=\"spn-daily-news\"/> */}\n                </Segment>\n                <Grid divided='vertically'>\n                    <Grid.Row columns={2}>\n                        {/* <Grid.Column width={5}>\n                            <Image src={this.props.league.logo_img} />\n                        </Grid.Column> */}\n                        <Grid.Column >\n                            <h1 className=\"top-story-headline-home\"> <strong>NBA News Stories</strong> </h1>\n                            <hr className=\"dividers hr-md-left-0\"/>\n                        <Carousel interval={6000} className=\"nba-carousel-item\">\n                        {this.state.news.map(article => (\n                            article.urlToImage !== null ?\n                            <Carousel.Item>\n                                    <img\n                                    // className=\"d-block w-100\"\n                                    src={article.urlToImage}\n                                    alt=\"First slide\"\n                                    className=\"nba-container-carousel\"\n                                    />\n                                    <Carousel.Caption>\n                                        <h3>{article.title}</h3>\n                                        <p>{article.description}</p>\n                                        <button onClick={() => window.open(article.url)}>Read More</button>\n                                    </Carousel.Caption>\n                                </Carousel.Item>\n                                :\n                                null\n                            ))}\n                            </Carousel>\n                        </Grid.Column>\n                        <Grid.Column>\n                            {/* <div>\n                            <h1 className=\"spn-daily-news\">ⓈⓅⓃ NBA News</h1>\n                            </div> */}\n                            <Segment>\n                            <h4 className=\"top-story-headline-home\"> <strong>Top Stories</strong> </h4>\n                            <hr className=\"dividers hr-md-left-0\"/>\n                                <Grid>\n                                    {news.map(article => \n                                    // article.urlToImage.split(\"\").slice(article.urlToImage.length - 3).join(\"\") !== \"png\" ? \n                                    <Grid.Row>\n                                        <Grid.Column>\n                                            <h4><strong>{article.title}</strong></h4>\n                                            <Image src={article.urlToImage} size=\"small\" className=\"daily-news-image\" centered=\"true\" onClick={() => window.open(article.url)}/>\n                                            <p>{article.description}</p>\n                                            <hr className=\"divider hr-md-left-0\"/>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                    // :\n                                    // null\n                                    )}\n                                </Grid>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                    {/* Team Players */}\n                    <Grid.Row columns={1}>\n                        <Grid.Column>\n                            <h1>Top NBA Players</h1>\n                            <br />\n                            <Grid divided='horizontally' centered>\n                                   <Grid.Row columns={3}>\n                            {this.props.players.map(player => {\n                                // debugger\n                               return player.full_name === \"Carmelo Anthony\" || player.full_name === \"Zion Williamson\" || player.full_name === \"Anthony Davis\" || player.full_name === \"LeBron James\" || player.full_name === \"Damian Lillard\" ? \n                                        <div>\n                                            <img alt=\"player\" src={player.player_image}></img>\n                                            <h3>{player.full_name}</h3>\n                                        </div>\n                                : \n                                null\n                            })}\n                            </Grid.Row>\n                            <div><Link to='nba/players'><Button>Click For All Players</Button></Link></div>\n                            </Grid>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={1}>\n                        {/* Second Table */}\n                        <Grid.Column>\n                            <h1>Top NBA Teams</h1>\n                            <br />\n                            <Grid divided='horizontally' centered>\n                                   <Grid.Row columns={3}>\n                            {this.props.teams.map(team => {\n                                // debugger\n                               return team.name === \"Lakers\" || team.name === \"Pelicans\" || team.name === \"Bucks\" || team.name === \"Clippers\" || team.name === \"Rockets\" ? \n                                        <div>\n                                            <img alt=\"team\" className=\"nba-team-logo-nba-container\" src={team.image}></img>\n                                            <h3>{team.name}</h3>\n                                        </div>\n                                : \n                                null\n                            })}\n                            </Grid.Row>\n                            <div><Link to='nba/teams'><Button>Click For All Teams</Button></Link></div>\n                            </Grid>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={2}>\n                        {/* Second Table */}\n                        <Grid.Column>\n                            <h1>East Standings</h1>\n                            <table class=\"table\">\n                            <thead>\n                                <tr>\n                                <th scope=\"col\">Team</th>\n                                <th scope=\"col\">Wins</th>\n                                <th scope=\"col\">Losses</th>\n                                <th scope=\"col\">Win Percentage</th>\n                                <th scope=\"col\">Divison Rank</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                <th scope=\"row\">Bucks</th>\n                                <td>53</td>\n                                <td>12</td>\n                                <td>.815</td>\n                                <td>1</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Raptors</th>\n                                <td>46</td>\n                                <td>18</td>\n                                <td>.719</td>\n                                <td>2</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Celtics</th>\n                                <td>43</td>\n                                <td>21</td>\n                                <td>.672</td>\n                                <td>3</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Heat</th>\n                                <td>41</td>\n                                <td>24</td>\n                                <td>.631</td>\n                                <td>4</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Pacers</th>\n                                <td>39</td>\n                                <td>26</td>\n                                <td>.600</td>\n                                <td>5</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">76ers</th>\n                                <td>39</td>\n                                <td>26</td>\n                                <td>.600</td>\n                                <td>6</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Nets</th>\n                                <td>30</td>\n                                <td>34</td>\n                                <td>.469</td>\n                                <td>7</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Magic</th>\n                                <td>30</td>\n                                <td>35</td>\n                                <td>.462</td>\n                                <td>8</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Wizards</th>\n                                <td>24</td>\n                                <td>40</td>\n                                <td>.375</td>\n                                <td>9</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Hornets</th>\n                                <td>23</td>\n                                <td>42</td>\n                                <td>.354</td>\n                                <td>10</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Bulls</th>\n                                <td>22</td>\n                                <td>43</td>\n                                <td>.338</td>\n                                <td>11</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Knicks</th>\n                                <td>21</td>\n                                <td>45</td>\n                                <td>.318</td>\n                                <td>12</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Pistons</th>\n                                <td>20</td>\n                                <td>46</td>\n                                <td>.303</td>\n                                <td>13</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Hawks</th>\n                                <td>20</td>\n                                <td>47</td>\n                                <td>.299</td>\n                                <td>14</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Cavaliers</th>\n                                <td>19</td>\n                                <td>46</td>\n                                <td>.292</td>\n                                <td>15</td>\n                                </tr>\n                            </tbody>\n                            </table>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <h1>West Standings</h1>\n                            <table class=\"table\">\n                            <thead>\n                                <tr>\n                                <th scope=\"col\">Team</th>\n                                <th scope=\"col\">Wins</th>\n                                <th scope=\"col\">Losses</th>\n                                <th scope=\"col\">Win Percentage</th>\n                                <th scope=\"col\">Divison Rank</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                <th scope=\"row\">Lakers</th>\n                                <td>49</td>\n                                <td>14</td>\n                                <td>.778</td>\n                                <td>1</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Clippers</th>\n                                <td>44</td>\n                                <td>20</td>\n                                <td>.688</td>\n                                <td>2</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Nuggets</th>\n                                <td>43</td>\n                                <td>22</td>\n                                <td>.662</td>\n                                <td>3</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Jazz</th>\n                                <td>41</td>\n                                <td>23</td>\n                                <td>.641</td>\n                                <td>4</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Thunder</th>\n                                <td>40</td>\n                                <td>24</td>\n                                <td>.625</td>\n                                <td>5</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Rockets</th>\n                                <td>40</td>\n                                <td>24</td>\n                                <td>.625</td>\n                                <td>6</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Mavericks</th>\n                                <td>40</td>\n                                <td>27</td>\n                                <td>.597</td>\n                                <td>7</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Grizzlies</th>\n                                <td>32</td>\n                                <td>33</td>\n                                <td>.492</td>\n                                <td>8</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Blazers</th>\n                                <td>29</td>\n                                <td>37</td>\n                                <td>.439</td>\n                                <td>9</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Pelicans</th>\n                                <td>28</td>\n                                <td>36</td>\n                                <td>.438</td>\n                                <td>10</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Kings</th>\n                                <td>28</td>\n                                <td>36</td>\n                                <td>.438</td>\n                                <td>11</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Spurs</th>\n                                <td>27</td>\n                                <td>36</td>\n                                <td>.429</td>\n                                <td>12</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Suns</th>\n                                <td>26</td>\n                                <td>39</td>\n                                <td>.400</td>\n                                <td>13</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Timberwolves</th>\n                                <td>19</td>\n                                <td>45</td>\n                                <td>.297</td>\n                                <td>14</td>\n                                </tr>\n                                <tr>\n                                <th scope=\"row\">Warriors</th>\n                                <td>15</td>\n                                <td>50</td>\n                                <td>.231</td>\n                                <td>15</td>\n                                </tr>\n                            </tbody>\n                            </table>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default NbaContainer","import React from 'react'\nimport { Card, Image, Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass NbaPlayer extends React.Component {\n    state = {\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n    handleClose = () => this.setState({ modalOpen: false })\n\n    render(){\n        const {id, full_name, player_image, college, height, weight, position, jersey_number, birthdate} = this.props.player\n        return(\n            <div>\n                <Card onClick={this.handleOpen} className=\"player-card\">\n                    <Image src={player_image} wrapped ui={false} className=\"player-card\"/>\n                    <Card.Content>\n                        <Card.Header>{full_name} {jersey_number}</Card.Header>\n                    <Card.Meta>\n                        <span className='date'></span>\n                    </Card.Meta>\n                    <Card.Description>\n                        Position: {position}\n                    </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                    {/* <a> */}\n                        <Icon name='basketball ball' />\n                        NBA Team: {this.props.player.team.name}\n                    {/* </a> */}\n                    </Card.Content>\n                </Card>\n                <Button onClick={() => this.props.favoritePlayer(id, full_name)}>Favorite Player</Button>\n                <Modal \n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}>\n                <Modal.Header>Player Details</Modal.Header>\n                    <Modal.Content image>\n                    <Image wrapped size='medium' src={player_image} />\n                    <Modal.Description>\n                        <Header>{full_name} {jersey_number}</Header>\n                        <p>College: {college}</p>\n                        <p>Position: {position}</p>\n                        <p>Height: {height}</p>\n                        <p>Weight: {weight}</p>\n                        <p>Birthdate: {birthdate}</p>\n                    </Modal.Description>\n                    <Modal.Description>\n                        <Image centered size=\"medium\" src={this.props.player.team.image}/>\n                    </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </div>\n        )\n    }\n}\nexport default NbaPlayer","import React from 'react'\nimport NbaPlayer from './NbaPlayer'\nimport { Grid, Search, Dropdown, Segment } from 'semantic-ui-react'\n// import swal from 'sweetalert';\n\n\n\nclass NbaPlayerIndex extends React.Component {\n    state = {\n        players: [],\n        dropdownTeam: [],\n        searchPlayers: this.props.players,\n        filteredPlayers: [],\n        search: \"\"\n    }\n\n    componentDidMount(){\n        this.setState({ players: this.props.players })\n    }\n\n    onChangeTeams = (event) => {\n        let filter = this.props.players.filter(player => event.target.textContent === player.team.name)\n        this.setState({ filteredPlayers: filter })\n        this.setState({ dropdownTeam: event.target.textContent })\n    }\n\n    onChangeSearch = (event) => {\n        // if (this.state.search.length === 0){\n        //     this.setState({ players: this.props.players })\n        // } else if (this.state.search.length > 0 && this.state.filteredPlayers.length === 0){\n        //     this.setState({ players: filter })\n        // } else if (this.state.filteredPlayers > 0){\n        //     const filterPlayerss = this.props.filteredPlayers.filter(player => player.full_name.includes(this.state.search))\n        //     this.setState({ filteredPlayers: filterPlayerss })\n        // }\n        if (this.state.filteredPlayers.length === []){\n            let filter = this.props.players.filter(player => player.full_name.includes(this.state.search)) \n            this.setState({ players: filter })\n            this.setState({ filteredPlayers: filter })\n            this.setState({ search: event.target.value })\n        } else {\n            let filter = this.state.filteredPlayers.filter(player => player.full_name.includes(this.state.search))\n            this.setState({ players: filter })\n            this.setState({ filteredPlayers: filter })\n            this.setState({ search: event.target.value })\n        }\n    }\n\n    render(){\n        const teams = this.props.teams.map(team => ({\n            key: team.name,\n            text: team.name,\n            value: team.name,\n        }))\n        teams.unshift({\n            key: \"All Teams\",\n            text: \"All Teams\",\n            value: \"All Teams\"\n        })\n        return(\n            <div className=\"nba-player-index\">\n                 <Segment>\n                    <h1 className=\"spn-nba-news\">NBA<img alt=\"nba\" src={this.props.league.logo_img} className=\"nba-image\"></img> Players</h1>\n                    {/* <Image src={process.env.PUBLIC_URL + '/SPN.png'} centered className=\"spn-daily-news\"/> */}\n                </Segment>\n                <br />\n                <Grid relaxed='very' columns={3}>\n                    <Grid.Column>\n                    <Dropdown placeholder='All Teams' search selection options={teams} onChange={this.onChangeTeams} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        {/* <h1> NBA </h1> */}\n                    </Grid.Column>\n                    <Grid.Column>\n                    <Search onSearchChange={this.onChangeSearch}/>\n                    </Grid.Column>\n                </Grid>\n                {/* <img src={this.props.league.logo_img} alt=\"logo\"/> */}\n                {this.state.filteredPlayers.length === 0 ?\n                <Grid relaxed='very' columns={5}>\n                {this.props.players.map(player => {\n                    return (\n                        <Grid.Column>\n                            <NbaPlayer player={player} playerTwo={this.props.filteredPlayers} key={player.id} favoritePlayer={this.props.favs}/>\n                        </Grid.Column>\n                    )\n                })}\n                </Grid>\n                :\n                <Grid relaxed='very' columns={5}>\n                {this.state.filteredPlayers.map(player => {\n                    return (\n                        <Grid.Column>\n                            <NbaPlayer player={player} playerTwo={this.props.filteredPlayers} key={player.id} favoritePlayer={this.props.favs}/>\n                        </Grid.Column>\n                    )\n                })}\n                </Grid>\n                }\n            </div>\n        )\n    }\n}\n\nexport default NbaPlayerIndex","import React from 'react'\nimport { Card, Image, Button, Header, Modal, Icon } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\nexport default class NbaTeam extends React.Component{ \n    state = {\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n    handleClose = () => this.setState({ modalOpen: false })\n\n\n    render(){\n        console.log(this.props.team.name)\n        const {id, image, market, name, sport_title, venue} = this.props.team\n        return(\n            <div>\n                <Card onClick={this.handleOpen}>\n                    <Image src={image} wrapped ui={false}/>\n                    <Card.Content>\n                        <Card.Header>{name}</Card.Header>\n                    <Card.Meta>\n                        <span className='date'></span>\n                    </Card.Meta>\n                    <Card.Description>\n                        Location: {market}\n                    </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                        <Icon name='basketball ball' />\n                        League: {sport_title}\n                    </Card.Content>\n                </Card>\n                <Button onClick={() => this.props.favoriteTeam(id, name)}>Follow Team</Button>\n                <Modal \n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}>\n                <Modal.Header>Team Details</Modal.Header>\n                    <Modal.Content image>\n                    <Image wrapped size='medium' src={image} />\n                    <Modal.Description>\n                        <Header>{name}</Header>\n                        <p>Venue: {venue}</p>\n                        <p>Market: {market}</p>\n                        <p>League: {sport_title}</p>\n                        <Link to={\"/nba/teams/\" + name}> {name} Team Page</Link>\n                    </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Grid, Dropdown, Segment } from 'semantic-ui-react'\nimport NbaTeam from './NbaTeam'\n\nexport default class NbaTeams extends React.Component{\n    state = {\n        dropdownTeam: [],\n        filteredTeam: []\n    }\n\n    onChangeTeams = (event) => {\n        let filter = this.props.teams.filter(team => event.target.textContent === team.name)\n        this.setState({ filteredTeam: filter })\n        this.setState({ dropdownTeam: event.target.textContent })\n    }\n\n    render(){\n        const teams = this.props.teams.map(team => ({\n            key: team.name,\n            text: team.name,\n            value: team.name,\n        }))\n        teams.unshift({\n            key: \"All Teams\",\n            text: \"All Teams\",\n            value: \"All Teams\"\n        })\n        return(\n            <div className=\"nba-team-index\">\n                {/* <h1>NBA teams</h1> */}\n                <Segment>\n                    <h1 className=\"spn-nba-news\">NBA<img alt=\"nba\" src={this.props.league.logo_img} className=\"nba-image\"></img> Teams</h1>\n                    {/* <Image src={process.env.PUBLIC_URL + '/SPN.png'} centered className=\"spn-daily-news\"/> */}\n                </Segment>\n                <Grid relaxed='very' columns={1}>\n                    <Grid.Column>\n                        <h4>Select Team</h4>\n                        <Dropdown placeholder='All Teams' search selection options={teams} onChange={this.onChangeTeams} />\n                    </Grid.Column>\n                </Grid>\n                {/* <img src=\"https://i0.wp.com/textlists.info/wp-content/uploads/nba.jpg?fit=700%2C330&ssl=1\" ></img> */}\n                <br /> <br /> <br />\n                {/* <img src={this.props.league.logo_img} alt=\"logo\"/> */}\n                {this.state.filteredTeam.length === 0 ? \n                <Grid relaxed='very' columns={5}>\n                {this.props.teams.map(team => {\n                    return (\n                        <Grid.Column>\n                            <NbaTeam team={team} key={team.id} favoriteTeam={this.props.favs}/>\n                        </Grid.Column>\n                    )\n                })}\n                </Grid>\n                :\n                <Grid relaxed='very' columns={5}>\n                {this.state.filteredTeam.map(team => {\n                    return (\n                        <Grid.Column>\n                            <NbaTeam team={team} key={team.id} favoriteTeam={this.props.favs}/>\n                        </Grid.Column>\n                    )\n                })}\n                </Grid>\n                }\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport { Card, Image, Modal, Header } from 'semantic-ui-react'\n\nclass NbaTeamPagePlayer extends Component {\n    state = {\n        modalOpen: false\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n    handleClose = () => this.setState({ modalOpen: false })\n\n    render(){\n        const {birthdate, college, full_name, height, jersey_number, player_image, weight, position} = this.props.player\n        return(\n            <div>\n                <Card onClick={this.handleOpen}>\n                    <Image src={player_image} wrapped ui={false}/>\n                    <Card.Content>\n                        <Card.Header>{full_name} {jersey_number}</Card.Header>\n                    <Card.Meta>\n                        <span className='date'></span>\n                    </Card.Meta>\n                    <Card.Description>\n                        Position: {position}\n                    </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                    </Card.Content>\n                </Card>\n                <Modal \n                    open={this.state.modalOpen}\n                    onClose={this.handleClose}>\n                <Modal.Header>Player Details</Modal.Header>\n                    <Modal.Content image>\n                    <Image wrapped size='medium' src={player_image} />\n                    <Modal.Description>\n                        <Header>{full_name} {jersey_number}</Header>\n                        <p>College: {college}</p>\n                        {/* <p>Position: {position}</p> */}\n                        <p>Height: {height}</p>\n                        <p>Weight: {weight}</p>\n                        <p>Birthdate: {birthdate}</p>\n                    </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default NbaTeamPagePlayer","import React from 'react'\nimport {Segment, Grid, Image, Loader} from 'semantic-ui-react'\nimport NbaTeamPagePlayer from './NbaTeamPagePlayer.js'\nimport Carousel from 'react-bootstrap/Carousel'\n\nexport default class NbaTeamPage extends React.Component {\n    state = {\n        teamNews: [],\n        filteredNews: [],\n        articles: [],\n        loaded: false,\n        nbaNews: []\n    }\n\n    componentDidMount(){\n        fetch(`https://newsapi.org/v2/everything?domains=nba.com&pageSize=100&apiKey=${process.env.REACT_APP_API_NEWS_NBA_KEY}`)\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({ teamNews: data.articles, loaded: true })\n        })\n\n        fetch(`http://spn-backend.herokuapp.com/teams/${this.props.team.id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                \"league\": 'NBA'\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({articles: data.articles})}\n            )\n\n        fetch(`https://newsapi.org/v2/everything?domains=nba.com&pageSize=20&apiKey=${process.env.REACT_APP_API_NEWS_NBA_KEY}`)\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({ nbaNews: data.articles })\n        })\n    }\n\n    render(){\n        let news = this.state.nbaNews.slice(Math.max(this.state.nbaNews.length - 2, 2))\n        const {image, market, name, venue} = this.props.team\n        return(\n            <div className=\"nba-team-page\">\n                {/* Webscraped Articles */}\n                {this.state.loaded && this.state.articles.length > 0 ?\n                <>\n                 <Segment>\n                    <h1 className=\"spn-daily-news\">{name}<img alt=\"nba\" src={image} className=\"nba-image\"></img> Team Page</h1>\n                    {/* <Image src={process.env.PUBLIC_URL + '/SPN.png'} centered className=\"spn-daily-news\"/> */}\n                </Segment>\n                {/* Carousal For NBA News */}\n                <Grid divided='vertically'>\n                    <Grid.Row columns={2}>\n                        <Grid.Column >\n                        <Carousel interval={6000} className=\"nba-page-carousel-item\">\n                        {this.state.nbaNews.map(article => (\n                            article.urlToImage !== null ?\n                            <Carousel.Item>\n                                    <img\n                                    // className=\"d-block w-100\"\n                                    src={article.urlToImage}\n                                    alt=\"First slide\"\n                                    className=\"nba-page-carousel\"\n                                    />\n                                    <Carousel.Caption>\n                                        <h3>{article.title}</h3>\n                                        <p>{article.description}</p>\n                                        <button onClick={() => window.open(article.url)}>Read More</button>\n                                    </Carousel.Caption>\n                                </Carousel.Item>\n                                :\n                                null\n                            ))}\n                            </Carousel>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Segment>\n                            <h4 className=\"top-story-headline-home\"> <strong>Stories Around The League</strong> </h4>\n                            <hr className=\"dividers hr-md-left-0\"/>\n                                <Grid>\n                                    {news.map(article => \n                                    // article.urlToImage.split(\"\").slice(article.urlToImage.length - 3).join(\"\") !== \"png\" ? \n                                    <Grid.Row>\n                                        <Grid.Column>\n                                            <h4><strong>{article.title}</strong></h4>\n                                            <Image src={article.urlToImage} size=\"small\" className=\"daily-news-image\" centered=\"true\" onClick={() => window.open(article.url)}/>\n                                            <p>{article.description}</p>\n                                            <hr className=\"divider hr-md-left-0\"/>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                    // :\n                                    // null\n                                    )}\n                                </Grid>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <Segment className=\"team-page-segment\" style={{backgroundColor: \"crimson\"}}> \n                    <Image src={image} size=\"medium\" centered/>\n                </Segment>\n                {/* <br /><br /> */}\n                <Grid>\n                {this.state.articles.map(article => {\n                return (<Grid.Row columns={2} divided>\n                     <Grid.Column width={6} centered>\n                         <Segment centered>\n                            <Image src={\"https://www.rotoworld.com/\" + article.image} centered/>\n                            <h4>{article.header}</h4>\n                        </Segment>\n                     </Grid.Column>\n                     <Grid.Column width={10}>\n                        {/* <br /><br /> */}\n                        <Segment>\n                            <h4> <u><strong>{article.headline}</strong></u> </h4>\n                            {article.body}\n                        </Segment>\n                     </Grid.Column>\n                     <hr className=\"dividers hr-md-left-0\"/> \n                 </Grid.Row>)\n                })}\n                </Grid>\n                {/* <br /><br /> */}\n                <Segment style={{backgroundColor: \"crimson\"}}>\n                    <Grid>\n                        <Grid.Row columns={5} centered divided>\n                            <Grid.Column>\n                                <br />\n                                <h1 style={{fontFamily: \"Impact\"}}>{venue}</h1>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image src={image} size=\"tiny\" centered/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <br />\n                                <h1 style={{fontFamily: \"Impact\"}}> {name}</h1>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image src={image} size=\"tiny\" centered/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <br />\n                                <h1 style={{fontFamily: \"Impact\"}}>{market}</h1>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                {/* <Image src={image} size=\"tiny\" centered/>\n                <p>Venue: {venue}</p>\n                <p>Market: {market}</p> */}\n                </Segment>\n                <Grid relaxed='very' columns={5}>\n                {this.props.team.players.map(player => {\n                    return (\n                        <Grid.Column centered>\n                            <Segment style={{background: `url(${image})`}}>\n                                <NbaTeamPagePlayer player={player} key={player.id}/>\n                            </Segment>\n                        </Grid.Column>\n                    )   \n                })}\n                </Grid>\n                </>\n               :\n                 <div>\n                    <Loader size=\"massive\" active indeterminate fluid className=\"loader-nba-page\">Preparing Team Information</Loader>\n                    <Image src='https://media.giphy.com/media/3o7b9DuZqNl0Aw2D1S/giphy.gif' fluid/>\n                </div>\n               }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport Profile from './containers/ProfileContainer'\nimport Home from \"./containers/Home\"\nimport About from './components/About'\n// import Footer from './components/Footer'\n// import { createStore } from 'redux'\nimport NbaContainer from './containers/NbaContainer'\nimport NbaPlayerIndex from './components/NbaPlayerIndex'\nimport NbaTeamsIndex from './components/NbaTeamsIndex'\nimport NbaTeamPage from './components/NbaTeamPage'\n// import VideoContainer from './containers/VideoContainer'\nimport { Route, Switch, Redirect} from 'react-router-dom'\nimport swal from 'sweetalert';\n\n\nclass App extends React.Component {\n  state = {\n    players: [],\n    Nbateams: [],\n    teams: [],\n    nbaLeague: [],\n    leagues: [],\n    currentUser: null,\n    favoritePlayers: [],\n    favoriteTeams: [],\n    alreadyFollowed: [],\n    displayed: 0,\n    filteredPlayers: [],\n    bookmarked: []\n  }\n\n  componentDidMount() {\n    fetch(\"https://spn-backend.herokuapp.com/leagues\")\n    .then(resp => resp.json())\n    .then(data => {\n      const nba = data.find(league => league.name === \"NBA\")\n      this.setState({ nbaLeague: nba })\n      this.setState( { leagues: data })\n    })\n    \n    fetch(\"https://spn-backend.herokuapp.com/teams\")\n    .then(resp => resp.json())\n    .then(data => {\n      const teams = data.filter(team => team.sport_title === \"NBA\" )\n      // console.log(teams)\n      this.setState({ Nbateams: teams })\n      this.setState({ teams: data })\n    })\n\n    fetch(\"https://spn-backend.herokuapp.com/players\")\n    .then(resp => resp.json())\n    .then(data => {\n      this.setState({ players: data })\n      this.display(data)\n    })\n\n    if(localStorage.getItem(\"token\")){\n    fetch(\"https://spn-backend.herokuapp.com/login\", {\n      headers: { \"Authenticate\": localStorage.token }\n    })\n    .then(resp => resp.json())\n    .then(user => {\n      this.handleLogin(user)\n    })\n    } else {\n      console.log(\"No Token Found\")\n    }\n\n    fetch(\"https://spn-backend.herokuapp.com/user_bookmarks\")\n        .then(resp => resp.json())\n        .then(data => {\n          // debugger\n          this.setState({bookmarked: data})\n        })\n  }\n\n  changeUserState = (props) => {\n    this.setState({ currentUser: props })\n  }\n\n  handleLogin = (user) => {\n    // Fetching User_Player data for User signed in\n    fetch(\"https://spn-backend.herokuapp.com/user_players\")\n    .then(resp => resp.json())\n    .then(data => {\n      let userInfo = data.filter(user_player => this.state.currentUser.id === user_player.user_id)\n      this.setState({ favoritePlayers: userInfo })\n    })\n    // Fetching User_Team data for User signed in\n    fetch(\"https://spn-backend.herokuapp.com/user_teams\")\n    .then(resp => resp.json())\n    .then(data => {\n      let userInfo = data.filter(user_team => this.state.currentUser.id === user_team.user_id)\n      this.setState({ favoriteTeams: userInfo })\n    })\n    // Set the state of currentUser logged in!\n    this.setState({ currentUser: user })\n  }\n\n  handleLogout = () => {\n    localStorage.clear()\n    this.setState({ currentUser: null })\n    this.setState({ favoritePlayers: [] })\n    this.setState({ favoriteTeams: [] })\n  }\n\n  deleteProfile = () => {\n    debugger\n    fetch(`https://spn-backend.herokuapp.com/users/${this.state.currentUser.id}`, {\n        method: \"DELETE\"\n    })\n    .then(resp => resp.json())\n    .then(data => {\n        localStorage.clear()\n        this.setState({ currentUser: null })\n        this.setState({ favoritePlayers: [] })\n        this.setState({ favoriteTeams: [] })\n        swal({\n            icon: \"info\",\n            text: \"Profile Deleted\"\n        })\n    })\n}\n\n  findUserPlayer = (id) => {\n    fetch(\"https://spn-backend.herokuapp.com/user_players\")\n    .then(resp => resp.json())\n    .then(data => {\n      let foundPlayer = data.find(userPlayer => userPlayer.id === id)\n        this.handleDeleteFavorite(foundPlayer.id)\n        swal({\n          icon: \"info\",\n          text: \"Player Unfollowed\"\n      })\n      }\n    )\n  }\n\n  favoriteNbaPlayer = (id, name) => {\n    // console.log(\"hit\", id)\n    const alreadyFollowed = this.state.favoritePlayers.some(p => p.player.full_name === name)\n\n    if (alreadyFollowed === true){\n      return swal({\n        icon: \"info\",\n        text: \"Player Already Followed\"\n    })} else if (this.state.currentUser === null) {\n      return swal({\n        icon: \"error\",\n        text: \"Must Be Signed In To Follow Player\"\n    })\n    } else {\n      const obj = {\n        user_id: this.state.currentUser.id,\n        player_id: id\n    }\n    fetch(\"hhttps://spn-backend.herokuapp.com/user_players\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\n        body: JSON.stringify(obj)\n    })\n    .then(resp => resp.json())\n    .then(data => {\n          this.setState({ favoritePlayers: [...this.state.favoritePlayers, data] })\n          return swal({\n            icon: \"success\",\n            text: \"Followed Player\"\n        })\n    })\n  }\n}\n\n  handleDeleteFavorite = (id) => {\n    fetch(`https://spn-backend.herokuapp.com/user_players/${id}`, {\n      method: \"DELETE\"\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      let filtered = this.state.favoritePlayers.filter(players => players.id !== data.id)\n      this.setState({ favoritePlayers: filtered })\n    })\n  }\n\n  favoriteNbaTeam = (id, name) => {\n    // console.log(\"hit\", id)\n    const alreadyFollowed = this.state.favoriteTeams.some(p => p.team.name === name)\n\n    if (alreadyFollowed === true){\n      return swal({\n        icon: \"info\",\n        text: \"Team Already Followed\"\n    })} else if (this.state.currentUser === null) {\n      return swal({\n        icon: \"error\",\n        text: \"Must Be Signed In To Follow Team\"\n    })\n    } else {\n      const obj = {\n        user_id: this.state.currentUser.id,\n        team_id: id\n    }\n    fetch(\"https://spn-backend.herokuapp.com/user_teams\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\n        body: JSON.stringify(obj)\n    })\n    .then(resp => resp.json())\n    .then(data => {\n          this.setState({ favoriteTeams: [...this.state.favoriteTeams, data] })\n          return swal({\n            icon: \"success\",\n            text: \"Followed Team\"\n        })\n    })\n  }\n}\n\nhandleDeleteFavoriteTeam = (id) => {\n  fetch(`https://spn-backend.herokuapp.com/user_teams/${id}`, {\n    method: \"DELETE\"\n  })\n  .then(resp => resp.json())\n  .then(data => {\n    let filtered = this.state.favoriteTeams.filter(teams => teams.id !== data.id)\n    this.setState({ favoriteTeams: filtered })\n  })\n  swal({\n    icon: \"info\",\n    text: \"Team Unfollowed\"\n})\n}\n\n  display = (prop) => {\n      const filter = prop.slice(this.state.displayed, this.state.displayed+20)\n      this.setState({ filteredPlayer: filter })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Nav Bar */}\n        <Nav user={this.state.currentUser} logout={this.handleLogout} league={this.state.nbaLeague} teams={this.state.Nbateams}/>\n        <br />\n        <div className=\"main-container\">\n        <Switch>\n          {/* Home */}\n          <Route exact path=\"/\" render={() => <Home user={this.state.currentUser}/>}/>\n          {/* NBA */}\n          <Route exact path=\"/nba\" render={ () => <NbaContainer players={this.state.players} teams={this.state.Nbateams} league={this.state.nbaLeague} favs={this.state.favoritePlayers}/>} />\n          {/* Nba/Players */}\n          <Route exact path=\"/nba/players\" render={ () => <NbaPlayerIndex players={this.state.players} filtered={this.state.filteredPlayers} teams={this.state.Nbateams} league={this.state.nbaLeague} user={this.state.currentUser} favs={this.favoriteNbaPlayer}/>} />\n          {/* NBA/Teams */}\n          <Route exact path=\"/nba/teams\" render={() => <NbaTeamsIndex players={this.state.players} teams={this.state.Nbateams} league={this.state.nbaLeague} user={this.state.currentUser} favs={this.favoriteNbaTeam}/>} />\n          {/* Login */}\n          <Route exact path=\"/login\" render={ () => (\n          this.state.currentUser === null || localStorage.length === 0 ? \n          <Login loginUser={this.handleLogin}/>\n          :\n          <Redirect to=\"/profile\"/>\n          )} />\n          {/* About */}\n          <Route exact path=\"/about\" render={() => <About />}/>\n          {/* Profile */}\n          <Route exact path=\"/profile\" render={ () => (\n          this.state.currentUser === null || localStorage.length === 0 ?\n          <Redirect to=\"/login\"/>\n          :\n          <Profile user={this.state.currentUser} edit={this.changeUserState} deleteProfile={this.deleteProfile} favsPlayers={this.state.favoritePlayers} favTeams={this.state.favoriteTeams} delete={this.findUserPlayer} deleteTeam={this.handleDeleteFavoriteTeam} bookmarks={this.state.bookmarked}/>\n          )} />\n          {/* SignUp */}\n          <Route exact path='/signup' render={ () => (\n          this.state.currentUser === null || localStorage.length === 0 ?\n          <Signup loginUser={this.handleLogin}/>\n          :\n          <Profile user={this.state.currentUser} edit={this.changeUserState} deleteProfile={this.deleteProfile} favsPlayers={this.state.favoritePlayers} favTeams={this.state.favoriteTeams} delete={this.findUserPlayer} deleteTeam={this.handleDeleteFavoriteTeam} bookmarks={this.state.bookmarked}/>\n          )} />\n          {/* Team Pages */}\n          {this.state.teams.map(team => {\n            // debugger\n            return (\n              <Route exact path={\"/nba/teams/\" + team.name} key={team.id} render={() => (\n                <NbaTeamPage key={team.id} team={team}/>\n              )} />\n            )\n          })}\n          {/* Video Container */}\n          {/* <Route exact path=\"/highlights\" render={() => {\n            return <VideoContainer /> \n          }}/> */}\n        </Switch>\n        </div>\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}